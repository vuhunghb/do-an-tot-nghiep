package irestads.beans.ads;
import irestads.defination.Base64;
import irestads.defination.UploadUtils;


import irestads.model.AdsItem;
import irestads.service.AdsItemLocalServiceUtil;
import irestads.service.AdsItemServiceUtil;
import irestads.service.persistence.AdsItemUtil;

import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.io.IOException;
import java.io.InputStream;
import java.io.OutputStream;
import java.util.ArrayList;
import java.util.LinkedHashMap;
import java.util.List;
import java.util.Map;

import javax.faces.application.FacesMessage;
import javax.faces.context.FacesContext;
import javax.faces.event.ValueChangeEvent;

import org.primefaces.event.FileUploadEvent;
import org.primefaces.event.RowEditEvent;

import com.sun.org.apache.xpath.internal.compiler.Keywords;

public class AdsItemBeans {
	private List<AdsItem> adsItems;
	private AdsItem adsItemSelected;
	private AdsItem adsItemSearch;
	private AdsItem adsItemAdd;
	private String searchType;
	private String keyWords;
	private String base64ImgAvatar;

	public String getBase64ImgAvatar() {
		return base64ImgAvatar;
	}

	public void uploadImg(FileUploadEvent event)
			throws InterruptedException {
		String base64ImgAvatar = UploadUtils.handleFileUpload(event);
		adsItemAdd.setImageContent(base64ImgAvatar);
	}
	public void setBase64ImgAvatar(String base64ImgAvatar) {
		this.base64ImgAvatar = base64ImgAvatar;
	}
	// Generated by Map search types
	private Map<String, Object> searchTypesValue;
	{
		searchTypesValue = new LinkedHashMap<String, Object>();
		searchTypesValue.put("Tất cả", -1); // label, value
		searchTypesValue.put("Tên CTy", 1); // label, value
		searchTypesValue.put("Tên S. Phẩm", 2); // label, value
		searchTypesValue.put("Thẻ", 3); // label, value
		searchTypesValue.put("Loại", 4); // label, value
		searchTypesValue.put("Danh mục", 5); // label, value
		searchTypesValue.put("Thời gian", 6); // label, value
	}

	public AdsItemBeans() {
//		dishAdd = DishLocalServiceUtil.createDish(0);
//		this.dishs = new ArrayList<Dish>();
//		this.getDishsFromDB();
		this.adsItems=new ArrayList<AdsItem>();
		adsItemAdd=AdsItemLocalServiceUtil.createAdsItem(0);
		this.getAdsItemsFromDB();
		
		

		// TODO Auto-generated constructor stub
	}

	public void onEdit(RowEditEvent event) {
		try {
			AdsItem adsItem = (AdsItem) event.getObject();
			adsItem = AdsItemServiceUtil.updateAdsItem(adsItem);
			String message = "Không thể thực hiện thay đổi thông tin Quảng Cáo";
			if (adsItem != null) {
				message = "Đã thay đổi thông tin Quảng Cáo thành công";
				this.getAdsItemsFromDB();
			}
			FacesMessage msg = new FacesMessage(message, adsItem.getAdsItemId()
					+ " , " + adsItem.getProductName());
			FacesContext.getCurrentInstance().addMessage(null, msg);

		} catch (Exception e) {
			// TODO: handle exception
			e.printStackTrace();
		}

	}

	public List<AdsItem> getAdsItemsFromDB() {
		this.adsItems = AdsItemServiceUtil.getAllAdsItems();
	//	System.out.println("get dishs ------------------" + dishs.size());
		return this.adsItems;

	}

	public String addAdsItem() {
		// RequestContext context = RequestContext.getCurrentInstance();
		System.out.println("add");
		FacesMessage fmsg = null;
		boolean result = false;
		String msg;

	
		AdsItem adsItem =AdsItemServiceUtil.createAdsItem(adsItemAdd);
		if (adsItem != null) {
			msg = "Thêm Quảng cáo thành công ";
			fmsg = new FacesMessage(FacesMessage.SEVERITY_INFO, msg, "Mã: "
					+ adsItem.getAdsItemId() + " Tên CT: " + adsItem.getCompanyName());
			result = true;
		} else {
			msg = "Thêm Quảng cáo không thành công ";
			fmsg = new FacesMessage(FacesMessage.SEVERITY_WARN, msg,
					"Kiểm tra Lỗi");
			result = false;
		}

		FacesContext.getCurrentInstance().addMessage(null, fmsg);
		// context.addCallbackParam("result", result);
		this.getAdsItemsFromDB();
		return "index.html";
	}

	public String changeAddPage() {
		return "add_dish.xhtml";
	}

	public void deleteAdsItem() {
	
		String message = "Không thể thực hiện xóa Quảng Cáo";
		AdsItem adsItem = AdsItemServiceUtil.deleteAdsItem(adsItemSelected.getAdsItemId());
			if (adsItem != null) {
				message = "Đã xóa Quảng Cáo thành công";
				this.getAdsItemsFromDB();
				FacesMessage msg = new FacesMessage(message, adsItem.getAdsItemId()
						+ " : " + adsItem.getCompanyName());
			}
		
		FacesMessage msg = new FacesMessage(message);
		FacesContext.getCurrentInstance().addMessage(null, msg);
	}

	public void onCancel(RowEditEvent event) {
		FacesMessage msg = new FacesMessage("Xóa Quảng Cáo",
				((AdsItem) event.getObject()).getAdsItemId()+"");

		FacesContext.getCurrentInstance().addMessage(null, msg);
	}

	public String search() {
		
		switch (Integer.parseInt(searchType)) {
		case -1:
			this.adsItems = getAdsItemsFromDB();
			break;
		case 1:
			this.adsItems=AdsItemServiceUtil.findAdsByCompName(keyWords);
			break;
		case 2:
			this.adsItems = AdsItemServiceUtil.findAdsByProductName(keyWords);

			break;
		case 3:
			this.adsItems = AdsItemServiceUtil.findAdsByTags(keyWords);

			break;
		case 4:
			this.adsItems = AdsItemServiceUtil.findAdsByItemType(keyWords);
			break;
		case 5:
			this.adsItems = AdsItemServiceUtil.findAdsByCategoryName(keyWords);

			break;
		case 6:
			this.adsItems = AdsItemServiceUtil.findAdsByTimeDuration(Integer.parseInt(keyWords));

			break;
//		case 7:
//			this.adsItems = AdsItemServiceUtil.findadsItemsByReferPrice(Integer
//					.parseInt(keyWords));
//
//			break;
//		case 8:
//			this.adsItems = AdsItemServiceUtil.findadsItemsByCategoryName(keyWords);
//
//			break;

		// default:this.dishs= getDishsFromDB();
		// break;
		}

		System.out.println("list adsItems " + adsItems.size());
		return "";
	}

	public String toStrAdsType( String value){
		if(value.equals("eAdsItemContextModel")){
			return "Theo ngữ cảnh";
		}else if(value.equals("AdsItemNormalModel")){
			return "Bình thường";
		}else{
			return "Chưa X. Định";
		}
	}

	public String getSearchType() {
		return searchType;
	}

	public void setSearchType(String searchType) {
		this.searchType = searchType;
	}

	public String getKeyWords() {
		return keyWords;
	}

	public void setKeyWords(String keyWords) {
		this.keyWords = keyWords;
	}

	public Map<String, Object> getSearchTypesValue() {
		return searchTypesValue;
	}

	public void setSearchTypesValue(Map<String, Object> searchTypesValue) {
		this.searchTypesValue = searchTypesValue;
	}

	public List<AdsItem> getAdsItems() {
		return adsItems;
	}

	public void setAdsItems(List<AdsItem> adsItems) {
		this.adsItems = adsItems;
	}

	public AdsItem getAdsItemSelected() {
		return adsItemSelected;
	}

	public void setAdsItemSelected(AdsItem adsItemSelected) {
		this.adsItemSelected = adsItemSelected;
	}

	public AdsItem getAdsItemSearch() {
		return adsItemSearch;
	}

	public void setAdsItemSearch(AdsItem adsItemSearch) {
		this.adsItemSearch = adsItemSearch;
	}

	public AdsItem getAdsItemAdd() {
		return adsItemAdd;
	}

	public void setAdsItemAdd(AdsItem adsItemAdd) {
		this.adsItemAdd = adsItemAdd;
	}

	
}
